{"version":3,"sources":["10-28/晚自习作业/context.js","10-28/晚自习作业/top.jsx","10-28/晚自习作业/left.jsx","10-28/晚自习作业/right.jsx","10-28/晚自习作业/content.jsx","10-28/晚自习作业/index.jsx","serviceWorker.js","index.js"],"names":["React","createContext","top","context","Consumer","data","className","style","background","onClick","setchange","left","theme","onclick","right","display","texts","content","Index","bg","setState","text","state","Provider","value","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sNACeA,G,KAAAA,IAAMC,iBCuDNC,EAtDH,WACV,OACE,kBAACC,EAAQC,SAAT,MACG,SAAAC,GACC,OACE,yBAAKC,UAAU,OACb,2DACA,4BACEC,MAAO,CAAEC,WAAY,WACrBC,QAAS,WACPJ,EAAKK,UAAU,aAHnB,sBAQA,4BACEH,MAAO,CAAEC,WAAY,WACrBC,QAAS,WACPJ,EAAKK,UAAU,aAHnB,sBAQA,4BACEH,MAAO,CAAEC,WAAY,WACrBC,QAAS,WACPJ,EAAKK,UAAU,aAHnB,sBAQA,4BACEH,MAAO,CAAEC,WAAY,WACrBC,QAAS,WACPJ,EAAKK,UAAU,aAHnB,sBAQA,4BACEH,MAAO,CAAEC,WAAY,WACrBC,QAAS,WACPJ,EAAKK,UAAU,aAHnB,2BCtBGC,EAjBF,WACX,OACE,kBAACR,EAAQC,SAAT,MACG,SAAAC,GACC,OACE,yBAAKC,UAAU,QACb,4BAAQC,MAAO,CAACC,WAAWH,EAAKO,OAAQH,QAAS,WAAKJ,EAAKQ,QAAQ,wBAAnE,sBACA,4BAAQN,MAAO,CAACC,WAAWH,EAAKO,OAAQH,QAAS,WAAKJ,EAAKQ,QAAQ,wBAAnE,sBACA,4BAAQN,MAAO,CAACC,WAAWH,EAAKO,OAAQH,QAAS,WAAKJ,EAAKQ,QAAQ,wBAAnE,2BCoBGC,EA5BD,WACZ,OACE,kBAACX,EAAQC,SAAT,MACG,SAAAC,GACC,OACE,yBAAKC,UAAU,SACb,uBAAGC,MAAO,CAAEQ,QAAwB,uBAAfV,EAAKW,MAAkB,QAAU,SAAtD,ksBAGA,uBAAGT,MAAO,CAAEQ,QAAwB,uBAAfV,EAAKW,MAAkB,QAAU,SAAtD,4/BAMA,uBAAGT,MAAO,CAAEQ,QAAwB,uBAAfV,EAAKW,MAAkB,QAAU,SAAtD,inCCGGC,EAfC,WACd,OACE,kBAACd,EAAQC,SAAT,MACG,SAAAC,GACC,OACE,yBAAKC,UAAU,UAAUC,MAAO,CAAEC,WAAYH,EAAKO,QACjD,kBAAC,EAAD,MACA,kBAAC,EAAD,WCJSM,E,YACnB,aAAe,IAAD,8BACZ,+CAQFR,UAAY,SAAAS,GACV,EAAKC,SAAS,CACZD,QAXU,EAedN,QAAU,SAAAQ,GACR,EAAKD,SAAS,CACZC,UAdF,EAAKC,MAAQ,CACXH,GAAI,UACJE,KAAM,sBALI,E,sEAqBZ,OACE,yBAAKf,UAAU,QACb,kBAACH,EAAQoB,SAAT,CACEC,MAAO,CACLZ,MAAOa,KAAKH,MAAMH,GAClBH,MAAOS,KAAKH,MAAMD,KAClBX,UAAWe,KAAKf,UAChBG,QAASY,KAAKZ,UAGhB,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GAjCyBa,aCIfC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,SD2H5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.b9a3f0cf.chunk.js","sourcesContent":["import React from 'react';\r\nexport default React.createContext();\r\n","import React from 'react';\r\nimport context from './context';\r\nconst top = () => {\r\n  return (\r\n    <context.Consumer>\r\n      {data => {\r\n        return (\r\n          <div className=\"top\">\r\n            <span>主题按钮:</span>\r\n            <button\r\n              style={{ background: '#FF0000' }}\r\n              onClick={() => {\r\n                data.setchange('#FF0000');\r\n              }}\r\n            >\r\n              玫瑰红\r\n            </button>\r\n            <button\r\n              style={{ background: '#4F81BD' }}\r\n              onClick={() => {\r\n                data.setchange('#4F81BD');\r\n              }}\r\n            >\r\n              宝石蓝\r\n            </button>\r\n            <button\r\n              style={{ background: '#FFFF00' }}\r\n              onClick={() => {\r\n                data.setchange('#FFFF00');\r\n              }}\r\n            >\r\n              雏菊黄\r\n            </button>\r\n            <button\r\n              style={{ background: '#FFFFFF' }}\r\n              onClick={() => {\r\n                data.setchange('#FFFFFF');\r\n              }}\r\n            >\r\n              天使白\r\n            </button>\r\n            <button\r\n              style={{ background: '#604A7B' }}\r\n              onClick={() => {\r\n                data.setchange('#604A7B');\r\n              }}\r\n            >\r\n              浪漫紫\r\n            </button>\r\n          </div>\r\n        );\r\n      }}\r\n    </context.Consumer>\r\n  );\r\n};\r\n\r\nexport default top;\r\n","import React from 'react';\r\nimport context from './context';\r\nconst left = () => {\r\n  return (\r\n    <context.Consumer>\r\n      {data => {\r\n        return (\r\n          <div className=\"left\">\r\n            <button style={{background:data.theme}} onClick={()=>{data.onclick('川建国')}}>川建国</button>\r\n            <button style={{background:data.theme}} onClick={()=>{data.onclick('郭德纲')}}>郭德纲</button>\r\n            <button style={{background:data.theme}} onClick={()=>{data.onclick('李云龙')}}>李云龙</button>\r\n            \r\n          </div>\r\n        );\r\n      }}\r\n    </context.Consumer>\r\n  );\r\n};\r\n\r\nexport default left;\r\n","import React from 'react';\r\nimport context from './context';\r\nconst right = () => {\r\n  return (\r\n    <context.Consumer>\r\n      {data => {\r\n        return (\r\n          <div className=\"right\">\r\n            <p style={{ display: data.texts === '川建国' ? 'block' : 'none' }}>\r\n              “川建国”同志一次多次在网络中提及，意思就是调侃美国美国总统特朗普的所作所为，让美国在下坡路上越走越远，使用的各种手段及政策不仅没有起到想要的目的，反而是搬起石头砸了自己的脚，因此网友笑称特朗普是“自己人”，将其戏称为“川建国同志”。\r\n            </p>\r\n            <p style={{ display: data.texts === '郭德纲' ? 'block' : 'none' }}>\r\n              郭德纲，男，出生于1973年1月18日，天津人，相声演员，电影、电视剧演员，电视脱口秀主持人。\r\n              1979年投身艺坛，先拜评书前辈高庆海学习评书，后跟随相声名家常宝丰学相声，又师从相声大师侯耀文。其间又学习了京剧、评剧、河北梆子等剧种，辗转梨园多年。\r\n              1995年，创办北京德云社。 [1]\r\n              2005年起，郭德纲及其德云社异军突起，使公众重新关注相声这一艺术门类，实现了相声的二次复兴。\r\n            </p>\r\n            <p style={{ display: data.texts === '李云龙' ? 'block' : 'none' }}>\r\n              李云龙（1919～1965）福建长汀人 [1]\r\n              ，中共名将，于1933年跟随红三军团参加了长征，1936年入党。\r\n              抗日战争时期，在林彪指挥的115师343旅686团2营，在平型关战役里曾中弹负伤。解放战争时期，李云龙曾担任100师政治部主任、副政委等职务。中华人民共和国成立后，所在部队改编为上海城防高炮第3师。1951年1月，所在部队再次改编为炮兵第63师，并于三月参加抗美援朝作战，期间击落敌机数架。\r\n              1965年李云龙因病逝世，安葬于南京雨花台功德园。\r\n            </p>\r\n          </div>\r\n        );\r\n      }}\r\n    </context.Consumer>\r\n  );\r\n};\r\n\r\nexport default right;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport context from './context';\r\nimport Left from './left';\r\nimport Right from './right';\r\nconst content = () => {\r\n  return (\r\n    <context.Consumer>\r\n      {data => {\r\n        return (\r\n          <div className=\"content\" style={{ background: data.theme }}>\r\n            <Left />\r\n            <Right />\r\n          </div>\r\n        );\r\n      }}\r\n    </context.Consumer>\r\n  );\r\n};\r\n\r\nexport default content;\r\n","import React, { Component } from 'react';\r\nimport './index.css';\r\n// 引入顶部导航栏\r\nimport Top from './top';\r\n// 引入上下文对象\r\nimport context from './context';\r\n// 引入主题内容\r\nimport Content from './content';\r\nexport default class Index extends Component {\r\n  constructor() {\r\n    super();\r\n    // 默认值\r\n    this.state = {\r\n      bg: '#FF0000',\r\n      text: '川建国'\r\n    };\r\n  }\r\n  // 改变背景颜色\r\n  setchange = bg => {\r\n    this.setState({\r\n      bg\r\n    });\r\n  };\r\n  // 控制文字内容\r\n  onclick = text => {\r\n    this.setState({\r\n      text\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"boby\">\r\n        <context.Provider\r\n          value={{\r\n            theme: this.state.bg,\r\n            texts: this.state.text,\r\n            setchange: this.setchange,\r\n            onclick: this.onclick\r\n          }}\r\n        >\r\n          <Top />\r\n          <Content />\r\n        </context.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './10-28/晚自习作业'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}